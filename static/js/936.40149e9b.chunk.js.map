{"version":3,"file":"static/js/936.40149e9b.chunk.js","mappings":"sKACA,MAA4B,8BAA5B,EAAiE,yB,0BCwBjE,EArBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,GACCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACT,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CACED,UAAWC,EACXC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMT,GAHjB,SAKGI,KANID,EADA,KAalB,C,+ICtBD,EAAwB,oB,SCmCxB,EA9BiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,6FACpBF,GAAW,GADS,mBAGQG,EAAAA,EAAAA,MAHR,gBAGVC,EAHU,EAGVA,QACRR,EAAUQ,GAJQ,gDAMlBN,EAAS,KAAMO,SANG,yBAQlBL,GAAW,GARO,4EAAH,qDAWnBE,GACD,GAAE,KAGD,4BACGH,IAAW,SAACO,EAAA,EAAD,KACZ,eAAIhB,UAAWC,EAAf,SAA6B,mBAC5BP,IAAU,SAACuB,EAAA,EAAD,CAAYvB,OAAQA,IAC9Ba,IAAS,uBAAG,2BAGlB,C,8MChCKW,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,kCAEZX,EAAmB,mCAAG,sGACVK,EAASO,IAAI,uBADH,uBACzBC,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMC,GAAN,yFACHV,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNQ,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBF,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZK,EAAiB,mCAAG,WAAMjC,GAAN,yFACRoB,EAASO,IAAT,gBAAsB3B,IADd,uBACvB4B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBM,EAAiB,mCAAG,WAAMlC,GAAN,yFACRoB,EAASO,IAAT,gBAAsB3B,EAAtB,aADQ,uBACvB4B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBO,EAAiB,mCAAG,WAAMnC,GAAN,yFACRoB,EAASO,IAAT,gBAAsB3B,EAAtB,aADQ,uBACvB4B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx","services/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movielink\":\"MoviesList_movielink__oFut4\",\"link\":\"MoviesList_link__8rTGX\"};","import styles from './MoviesList.module.css';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies &&\n        movies.map(({ id, title }) => (\n          <li key={id} className={styles.movielink}>\n            <Link\n              className={styles.link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__L087v\"};","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/api-movies';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport styles from './Home.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrending = async () => {\n      setLoading(true);\n      try {\n        const { results } = await fetchTrendingMovies();\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrending();\n  }, []);\n\n  return (\n    <main>\n      {loading && <Loader />}\n      <h1 className={styles.title}>Tranding today</h1>\n      {movies && <MoviesList movies={movies} />}\n      {error && <p>Something goes wrong</p>}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '0d7a3e0f2906a3f05e73804ba320517e',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await instance.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await instance.get(`movie/${id}/reviews`);\n  return data;\n};\n"],"names":["movies","location","useLocation","map","id","title","className","styles","to","state","from","useState","setMovies","error","setError","loading","setLoading","useEffect","fetchTrending","fetchTrendingMovies","results","message","Loader","MoviesList","instance","axios","baseURL","params","api_key","language","IMAGE_URL","get","data","searchMovies","query","page","include_adult","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}